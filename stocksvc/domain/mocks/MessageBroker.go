// Code generated by mockery v2.10.0. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// MessageBroker is an autogenerated mock type for the MessageBroker type
type MessageBroker struct {
	mock.Mock
}

// Publish provides a mock function with given fields: ctx, topic, message
func (_m *MessageBroker) Publish(ctx context.Context, topic string, message interface{}) error {
	ret := _m.Called(ctx, topic, message)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string, interface{}) error); ok {
		r0 = rf(ctx, topic, message)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Subscribe provides a mock function with given fields: topic, handler
func (_m *MessageBroker) Subscribe(topic string, handler func(interface{})) error {
	ret := _m.Called(topic, handler)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, func(interface{})) error); ok {
		r0 = rf(topic, handler)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
