services:
  mysql:
    platform: linux/x86_64
    image: mysql:5.7
    environment:
      MYSQL_DATABASE: 'mysql'
      MYSQL_ROOT_PASSWORD: '12345678'
    ports:
      - "3306:3306"
    volumes:
      - ./init-script.sql:/docker-entrypoint-initdb.d/init-script.sql
    networks:
      - microsvc

  redis:
    ports:
      - '6379:6379'
    image: redis

  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "14268:14268"
      - "16686:16686"
    networks:
      - microsvc

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    networks:
      - microsvc

  kafka:
    build: "./kafka"
    ports:
      - "9092:9092"
    networks:
      - microsvc
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 127.0.0.1
      KAFKA_CREATE_TOPICS: "test:1:1"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  productsvc:
    build:
      context: "./productsvc"
    ports:
      - "8080:8080"
    entrypoint: "/app/app ."
    restart: on-failure
    environment:
      - DB_HOST=mysql
      - JAEGER_HOST=http://jaeger:14268/api/traces
    depends_on:
      - mysql
      - jaeger
      - redis
    networks:
      - microsvc

  ordersvc:
    build:
      context: "./ordersvc"
    ports:
      - "3000:3000"
    entrypoint: "/app/app serve"
    restart: on-failure
    environment:
      - DB_HOST=mysql
      - JAEGER_HOST=http://jaeger:14268/api/traces
      - KAFKA_HOST="kafka:9092"
    depends_on:
      - mysql
      - jaeger
      - redis
    networks:
      - microsvc

  ordersvc-listener:
    build:
      context: "./ordersvc"
    entrypoint: "/app/app listen"
    restart: on-failure
    environment:
      - DB_HOST=mysql
      - JAEGER_HOST=http://jaeger:14268/api/traces
      - KAFKA_HOST="kafka:9092"
    depends_on:
      - mysql
      - jaeger
      - redis
      - kafka
    networks:
      - microsvc

networks:
  microsvc: