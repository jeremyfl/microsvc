// Code generated by mockery v2.10.0. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	model "gitlab.com/jeremylo/microsvc/ordersvc/domain/model"
)

// OrderRepository is an autogenerated mock type for the OrderRepository type
type OrderRepository struct {
	mock.Mock
}

// Create provides a mock function with given fields: ctx, payload
func (_m *OrderRepository) Create(ctx context.Context, payload *model.Order) (*model.Order, error) {
	ret := _m.Called(ctx, payload)

	var r0 *model.Order
	if rf, ok := ret.Get(0).(func(context.Context, *model.Order) *model.Order); ok {
		r0 = rf(ctx, payload)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*model.Order)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *model.Order) error); ok {
		r1 = rf(ctx, payload)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Update provides a mock function with given fields: ctx, filter, payload
func (_m *OrderRepository) Update(ctx context.Context, filter *model.Order, payload *model.Order) error {
	ret := _m.Called(ctx, filter, payload)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *model.Order, *model.Order) error); ok {
		r0 = rf(ctx, filter, payload)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
